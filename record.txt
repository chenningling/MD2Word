22:27:46.991 exportService.js:81 开始导出Word文档...
22:27:46.991 exportService.js:82 格式设置: {template: 'default', content: {…}, latin: {…}, page: {…}}
22:27:46.991 exportService.js:85 [Export] 开始处理 LaTeX 公式...
22:27:46.991  [LaTeX Export] 开始处理文档中的 LaTeX 公式
22:27:46.992  [LaTeX Export Debug] 当前时间戳: 1756564066991 缓存大小: 100
22:27:46.992  [LaTeX Utils] 开始提取 LaTeX 公式，文本长度: 73
22:27:46.992  [LaTeX Utils] 提取完成，共发现 0 个公式
22:27:46.992  [LaTeX Export] 文档中没有 LaTeX 公式
22:27:46.992  [Export] 使用处理后的markdown: # 表格测试

哈哈哈

| 名称 | 年龄 |
|------|------|
| 张三 | 25 |
| 李四 | 30 |

哈哈哈哈哈

...
22:27:46.992  解析的Markdown tokens: (6) [{…}, {…}, {…}, {…}, {…}, {…}, links: {…}]
22:27:46.992  [OMML Debug] 详细检查解析后的tokens:
22:27:46.992  [OMML Debug] Token 0: {type: 'heading', text: '表格测试', raw: '# 表格测试\n\n', hasTokens: true, tokensCount: 1}
22:27:46.993  [OMML Debug]   SubToken 0: {type: 'text', text: '表格测试', raw: '表格测试'}
22:27:46.993  [OMML Debug] Token 1: {type: 'paragraph', text: '哈哈哈', raw: '哈哈哈', hasTokens: true, tokensCount: 1}
22:27:46.993  [OMML Debug]   SubToken 0: {type: 'text', text: '哈哈哈', raw: '哈哈哈'}
22:27:46.993  [OMML Debug] Token 2: {type: 'space', text: undefined, raw: '\n\n', hasTokens: false, tokensCount: 0}
22:27:46.993  [OMML Debug] Token 3: {type: 'table', text: undefined, raw: '| 名称 | 年龄 |\n|------|------|\n| 张三 | 25 |\n| 李四 | 30 |\n\n', hasTokens: false, tokensCount: 0}
22:27:46.993  [OMML Debug] Token 4: {type: 'paragraph', text: '哈哈哈哈哈', raw: '哈哈哈哈哈', hasTokens: true, tokensCount: 1}
22:27:46.993  [OMML Debug]   SubToken 0: {type: 'text', text: '哈哈哈哈哈', raw: '哈哈哈哈哈'}
22:27:46.993  [OMML Debug] Token 5: {type: 'space', text: undefined, raw: '\n\n', hasTokens: false, tokensCount: 0}
22:27:46.993  [Export] LaTeX 处理完成: {hasFormulas: false, formulaCount: 0, conversionTime: 1, fallbackMode: false}
22:27:46.993  表格内容: [
  {
    "type": "table",
    "raw": "| 名称 | 年龄 |\n|------|------|\n| 张三 | 25 |\n| 李四 | 30 |\n\n",
    "header": [
      {
        "text": "名称",
        "tokens": [
          {
            "type": "text",
            "raw": "名称",
            "text": "名称",
            "escaped": false
          }
        ],
        "header": true,
        "align": null
      },
      {
        "text": "年龄",
        "tokens": [
          {
            "type": "text",
            "raw": "年龄",
            "text": "年龄",
            "escaped": false
          }
        ],
        "header": true,
        "align": null
      }
    ],
    "align": [
      null,
      null
    ],
    "rows": [
      [
        {
          "text": "张三",
          "tokens": [
            {
              "type": "text",
              "raw": "张三",
              "text": "张三",
              "escaped": false
            }
          ],
          "header": false,
          "align": null
        },
        {
          "text": "25",
          "tokens": [
            {
              "type": "text",
              "raw": "25",
              "text": "25",
              "escaped": false
            }
          ],
          "header": false,
          "align": null
        }
      ],
      [
        {
          "text": "李四",
          "tokens": [
            {
              "type": "text",
              "raw": "李四",
              "text": "李四",
              "escaped": false
            }
          ],
          "header": false,
          "align": null
        },
        {
          "text": "30",
          "tokens": [
            {
              "type": "text",
              "raw": "30",
              "text": "30",
              "escaped": false
            }
          ],
          "header": false,
          "align": null
        }
      ]
    ]
  }
]
22:27:46.993  预处理完成，共处理 0 张图片
22:27:46.993  处理后的tokens: (6) [{…}, {…}, {…}, {…}, {…}, {…}]
22:27:46.994  [OMML Debug] 检查tokens中的占位符...
22:27:46.995  开始解析 6 个tokens为Word文档元素
22:27:46.995  tokens类型统计: {heading: 1, paragraph: 2, space: 2, table: 1}
22:27:46.995  处理内联格式: 表格测试 (标题)
22:27:46.995  标题1设置: {spacingBefore: 12, spacingBeforeTwips: 240, spacingAfter: 8, spacingAfterTwips: 160, lineHeight: 1.5, …}
22:27:46.996  首行缩进计算详情: {fontSizeInPoints: 12, charCount: 2, fontFamily: '宋体', isChineseFont: true, charWidthRatio: 1, …}
22:27:46.996  段落设置: {firstLineIndent: 2, firstLineIndentTwips: 480, paragraphSpacing: 6, spacingAfterTwips: 120, lineHeight: 1.5, …}
22:27:46.996  创建段落：{"chosenStyleId":"paragraph-2-chars","firstLineIndent":2,"willSetIndentAtParagraphLevel":false}
22:27:46.996  未处理的token类型: space
parseTokensToDocxElements @ main.481eaa6ee52293b….hot-update.js:1654
createWordDocument @ main.481eaa6ee52293b….hot-update.js:1441
exportToWord @ main.481eaa6ee52293b…f.hot-update.js:189
await in exportToWord
handleExport @ bundle.js:296103
（匿名） @ bundle.js:101548
executeDispatch @ bundle.js:273622
runWithFiberInDEV @ bundle.js:266364
processDispatchQueue @ bundle.js:273650
（匿名） @ bundle.js:273943
batchedUpdates$1 @ bundle.js:267213
dispatchEventForPluginEventSystem @ bundle.js:273726
dispatchEvent @ bundle.js:275825
dispatchDiscreteEvent @ bundle.js:275807
22:27:46.996  创建表格: {type: 'table', raw: '| 名称 | 年龄 |\n|------|------|\n| 张三 | 25 |\n| 李四 | 30 |\n\n', header: Array(2), align: Array(2), rows: Array(2)}
22:27:46.996  表格表头: (2) [{…}, {…}]
22:27:46.996  表头单元格 0: 名称
22:27:46.996  表头单元格 1: 年龄
22:27:46.997  表格行数: 2
22:27:46.997  表格行 0: (2) [{…}, {…}]
22:27:46.997  单元格 [0,0]: 张三
22:27:46.997  单元格 [0,1]: 25
22:27:46.997  表格行 1: (2) [{…}, {…}]
22:27:46.997  单元格 [1,0]: 李四
22:27:46.997  单元格 [1,1]: 30
22:27:46.997  首行缩进计算详情: {fontSizeInPoints: 12, charCount: 2, fontFamily: '宋体', isChineseFont: true, charWidthRatio: 1, …}
22:27:46.998  段落设置: {firstLineIndent: 2, firstLineIndentTwips: 480, paragraphSpacing: 6, spacingAfterTwips: 120, lineHeight: 1.5, …}
22:27:46.998  创建段落：{"chosenStyleId":"paragraph-2-chars","firstLineIndent":2,"willSetIndentAtParagraphLevel":false}
22:27:46.998  未处理的token类型: space
parseTokensToDocxElements @ main.481eaa6ee52293b….hot-update.js:1654
createWordDocument @ main.481eaa6ee52293b….hot-update.js:1441
exportToWord @ main.481eaa6ee52293b…f.hot-update.js:189
await in exportToWord
handleExport @ bundle.js:296103
（匿名） @ bundle.js:101548
executeDispatch @ bundle.js:273622
runWithFiberInDEV @ bundle.js:266364
processDispatchQueue @ bundle.js:273650
（匿名） @ bundle.js:273943
batchedUpdates$1 @ bundle.js:267213
dispatchEventForPluginEventSystem @ bundle.js:273726
dispatchEvent @ bundle.js:275825
dispatchDiscreteEvent @ bundle.js:275807
22:27:46.998  解析完成，共生成 4 个Word文档元素
22:27:46.998  Word文档元素类型统计: {Paragraph: 3, Table: 1}
22:27:47.000  样式已注入（importedStyles）：paragraph-2-chars / paragraph-4-chars / paragraph-no-indent
22:27:47.035  [OMML Debug] 检查生成的docx中的占位符...
22:27:47.039  [OMML Debug] document.xml长度: 6341
22:27:47.039  [OMML Debug] XML中的占位符: []
22:27:47.039  [OMML Debug] XML开头预览: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><w:document mc:Ignorable="w14 w15 wp14" xmlns:wpc="http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:wp14="http:/
22:27:47.042  [Document Debug] 🚀 原始Word文档包含 9 个段落, 1 个表格
22:27:47.042  [Document Debug] 段落 1: 📝 文本内容 - "表格测试..."
22:27:47.042  [Document Debug] 段落 2: 📝 文本内容 - "哈哈哈..."
22:27:47.042  [Document Debug] 段落 3: 📝 文本内容 - "名称..."
22:27:47.042  [Document Debug] 段落 4: 📝 文本内容 - "年龄..."
22:27:47.042  [Document Debug] 段落 5: 📝 文本内容 - "张三..."
22:27:47.042 exportService.js:300 [Document Debug] 段落 6: 📝 文本内容 - "25..."
22:27:47.042 exportService.js:300 [Document Debug] 段落 7: 📝 文本内容 - "李四..."
22:27:47.042 exportService.js:300 [Document Debug] 段落 8: 📝 文本内容 - "30..."
22:27:47.042 exportService.js:300 [Document Debug] 段落 9: 📝 文本内容 - "哈哈哈哈哈..."
22:27:47.042 exportService.js:308 [OMML Post-process Debug] 开始替换 3 个公式占位符
22:27:47.042 exportService.js:309 [OMML Post-process Debug] XML文档长度: 6341
22:27:47.042 exportService.js:314 [OMML Post-process Debug] XML中找到 0 个占位符: []
22:27:47.042 exportService.js:326 [Table Protection] 发现 1 个表格区域需要保护
22:27:47.043 exportService.js:356 [OMML Post-process Debug] XML中占位符顺序: []
22:27:47.043 exportService.js:572 [OMML Post-process Debug] 处理完成，剩余占位符: 0 []
22:27:47.043 exportService.js:576 [Table Protection] 处理后文档包含 1 个表格 (原始: 1)
22:27:47.043 exportService.js:581 [Table Protection] ✅ 表格结构保持完整
22:27:47.043 exportService.js:585 [OMML Post-process Debug] 检查最终XML中的公式顺序...
22:27:47.043 exportService.js:587 [OMML Post-process Debug] 最终XML中包含 0 个数学公式
22:27:47.043 exportService.js:612 [OMML Post-process Debug] 验证公式ID和内容对应关系:
22:27:47.043 exportService.js:619 [OMML Post-process Debug] 分析XML段落结构:
22:27:47.043 exportService.js:620 [OMML Post-process Debug] XML字符串长度: 6341
22:27:47.043 exportService.js:623 [OMML Post-process Debug] 找到 9 个段落
22:27:47.043 exportService.js:647 [OMML Post-process Debug] 段落 1: 📝 标题 1 = "表格测试"
22:27:47.043 exportService.js:657 [OMML Post-process Debug] 段落分析完成: 共 9 个段落，0 个公式段落，1 个标题段落
22:27:47.043 exportService.js:662 [OMML Protection] OMML替换后XML中有 9 个段落
22:27:47.043 exportService.js:672 [OMML Protection] 段落 1: 📝 文本 - "表格测试..."
22:27:47.043 exportService.js:672 [OMML Protection] 段落 2: 📝 文本 - "哈哈哈..."
22:27:47.043 exportService.js:672 [OMML Protection] 段落 3: 📝 文本 - "名称..."
22:27:47.043 exportService.js:672 [OMML Protection] 段落 4: 📝 文本 - "年龄..."
22:27:47.043 exportService.js:672 [OMML Protection] 段落 5: 📝 文本 - "张三..."
22:27:47.043 exportService.js:672 [OMML Protection] 段落 6: 📝 文本 - "25..."
22:27:47.043 exportService.js:672 [OMML Protection] 段落 7: 📝 文本 - "李四..."
22:27:47.044 exportService.js:672 [OMML Protection] 段落 8: 📝 文本 - "30..."
22:27:47.044 exportService.js:672 [OMML Protection] 段落 9: 📝 文本 - "哈哈哈哈哈..."
22:27:47.044 exportService.js:687 [OMML Protection] 在已替换OMML的XML中找到 0 个OMML需要保护
22:27:47.044 exportService.js:698 [OMML Protection] ⚠️ 未找到OMML内容需要保护，可能OMML替换未成功
postProcessDocx @ exportService.js:698
await in postProcessDocx
exportToWord @ exportService.js:180
await in exportToWord
handleExport @ Header.js:185
（匿名） @ button.js:186
executeDispatch @ react-dom-client.development.js:16368
runWithFiberInDEV @ react-dom-client.development.js:1518
processDispatchQueue @ react-dom-client.development.js:16417
（匿名） @ react-dom-client.development.js:17016
batchedUpdates$1 @ react-dom-client.development.js:3262
dispatchEventForPluginEventSystem @ react-dom-client.development.js:16572
dispatchEvent @ react-dom-client.development.js:20657
dispatchDiscreteEvent @ react-dom-client.development.js:20625
22:27:47.046 exportService.js:710 [OMML Protection] XML解析完成，检查JSON结构
22:27:47.046 exportService.js:711 [OMML Protection] JSON根键: ?xml, w:document
22:27:47.046 exportService.js:719 [OMML Protection] ✅ 找到w:document
22:27:47.046 exportService.js:726 [OMML Protection] ✅ 找到w:body
22:27:47.046 exportService.js:729 [OMML Protection] 段落类型: object, 是否为数组: true
22:27:47.046 exportService.js:733 [OMML Protection] 找到 3 个段落数组
22:27:47.046 exportService.js:735 [OMML Protection] 段落 1: {"w:pPr":{"w:pStyle":{"@_w:val":"Heading1"},"w:spacing":{"@_w:before":"240","@_w:after":"160","@_w:l...
22:27:47.046 exportService.js:735 [OMML Protection] 段落 2: {"w:pPr":{"w:pStyle":{"@_w:val":"paragraph-2-chars"},"w:spacing":{"@_w:before":"0","@_w:after":"120"...
22:27:47.046 exportService.js:735 [OMML Protection] 段落 3: {"w:pPr":{"w:pStyle":{"@_w:val":"paragraph-2-chars"},"w:spacing":{"@_w:before":"0","@_w:after":"120"...
22:27:47.046 exportService.js:744 [OMML Protection] w:body的所有键: w:p, w:tbl, w:sectPr
22:27:47.046 exportService.js:747 [OMML Protection] 🔍 分析body结构中的所有子元素:
22:27:47.046 exportService.js:750 [OMML Protection] - w:p: 3 个段落
22:27:47.046 exportService.js:752 [OMML Protection] - w:tbl: 1个表格
22:27:47.046 exportService.js:754 [OMML Protection] - w:sectPr: object
22:27:47.046 exportService.js:788 [OMML Protection] 🔍 分析原始文档中的元素顺序...
22:27:47.046 exportService.js:825 [OMML Protection] 🔍 原始文档中body元素的实际顺序:
22:27:47.047 exportService.js:830 [OMML Protection] 1. 📝 段落: "表格测试" (位置: 0)
22:27:47.047 exportService.js:830 [OMML Protection] 2. 📝 段落: "哈哈哈" (位置: 400)
22:27:47.047 exportService.js:828 [OMML Protection] 3. 📋 表格1 (位置: 824)
22:27:47.047 exportService.js:830 [OMML Protection] 4. 📝 段落: "名称" (位置: 1340)
22:27:47.047 exportService.js:830 [OMML Protection] 5. 📝 段落: "年龄" (位置: 1615)
22:27:47.047 exportService.js:830 [OMML Protection] 6. 📝 段落: "张三" (位置: 1862)
22:27:47.047 exportService.js:830 [OMML Protection] 7. 📝 段落: "25" (位置: 2191)
22:27:47.047 exportService.js:830 [OMML Protection] 8. 📝 段落: "李四" (位置: 2585)
22:27:47.047 exportService.js:830 [OMML Protection] 9. 📝 段落: "30" (位置: 2914)
22:27:47.047 exportService.js:830 [OMML Protection] 10. 📝 段落: "哈哈哈哈哈" (位置: 3304)
22:27:47.047 exportService.js:838 [OMML Protection] 🔍 表格在所有元素中的位置: 3
22:27:47.047 exportService.js:839 [OMML Protection] 🔍 表格前有 2 个独立段落
22:27:47.047 exportService.js:842 [OMML Protection] ⚠️ 检测到表格位置问题，但JSON结构无法完美解决此问题
22:27:47.047 exportService.js:843 [OMML Protection] 💡 将采用XML字符串操作来修复表格位置
22:27:47.047 exportService.js:855 [OMML Protection] 📝 保存修复信息: 表格应在第2个独立段落后
22:27:47.048 exportService.js:866 [OMML Protection] XMLBuilder构建完成，准备开始恢复阶段
22:27:47.048 exportService.js:867 [OMML Protection] 构建后XML长度: 7146
22:27:47.048 exportService.js:868 [OMML Protection] 保护映射表大小: 0
22:27:47.048 exportService.js:872 [OMML Protection] 🔧 开始XML字符串级别的表格位置修复...
22:27:47.048 exportService.js:881 [OMML Protection] 🔍 XML中找到 9 个段落, 1 个表格
22:27:47.048 exportService.js:894 [OMML Protection] 🔍 识别出 1 个独立段落
22:27:47.048 exportService.js:922 [OMML Protection] XML重建后有 9 个段落, 1 个表格
22:27:47.048 exportService.js:925 [OMML Protection] 🔍 分析重建XML中所有body子元素的顺序:
22:27:47.048 exportService.js:937 [OMML Protection] 元素 1: 📝 段落 - "表格测试..." (位置: 2360)
22:27:47.048 exportService.js:937 [OMML Protection] 元素 2: 📝 段落 - "哈哈哈..." (位置: 2844)
22:27:47.048 exportService.js:937 [OMML Protection] 元素 3: 📝 段落 - "哈哈哈哈哈..." (位置: 3390)
22:27:47.048 exportService.js:932 [OMML Protection] 元素 4: 📋 表格 (位置: 3938)
22:27:47.048 exportService.js:951 [OMML Protection] 重建段落 1: 📝 文本 - "表格测试..."
22:27:47.049 exportService.js:951 [OMML Protection] 重建段落 2: 📝 文本 - "哈哈哈..."
22:27:47.049 exportService.js:951 [OMML Protection] 重建段落 3: 📝 文本 - "哈哈哈哈哈..."
22:27:47.049 exportService.js:951 [OMML Protection] 重建段落 4: 📝 文本 - "名称..."
22:27:47.049 exportService.js:951 [OMML Protection] 重建段落 5: 📝 文本 - "年龄..."
22:27:47.049 exportService.js:951 [OMML Protection] 重建段落 6: 📝 文本 - "张三..."
22:27:47.049 exportService.js:951 [OMML Protection] 重建段落 7: 📝 文本 - "25..."
22:27:47.049 exportService.js:951 [OMML Protection] 重建段落 8: 📝 文本 - "李四..."
22:27:47.049 exportService.js:951 [OMML Protection] 重建段落 9: 📝 文本 - "30..."
22:27:47.049 exportService.js:959 [OMML Protection] 开始恢复 0 个被保护的OMML
22:27:47.049 exportService.js:960 [OMML Protection] 恢复前XML长度: 7146
22:27:47.049 exportService.js:964 [OMML Protection] XML中是否包含保护键: false
22:27:47.049 exportService.js:978 [OMML Protection] ⚠️ 所有保护键都未在XML中找到，可能XML解析过程中丢失了
postProcessDocx @ exportService.js:978
await in postProcessDocx
exportToWord @ exportService.js:180
await in exportToWord
handleExport @ Header.js:185
（匿名） @ button.js:186
executeDispatch @ react-dom-client.development.js:16368
runWithFiberInDEV @ react-dom-client.development.js:1518
processDispatchQueue @ react-dom-client.development.js:16417
（匿名） @ react-dom-client.development.js:17016
batchedUpdates$1 @ react-dom-client.development.js:3262
dispatchEventForPluginEventSystem @ react-dom-client.development.js:16572
dispatchEvent @ react-dom-client.development.js:20657
dispatchDiscreteEvent @ react-dom-client.development.js:20625
22:27:47.049 exportService.js:982 [OMML Protection] XML中是否包含原始占位符: false
22:27:47.049 exportService.js:989 [OMML Protection] 恢复后XML长度: 7146
22:27:47.049 exportService.js:990 [OMML Protection] OMML恢复完成
22:27:47.060 exportService.js:995 docx后处理完成：已写入 firstLineChars 和 OMML 公式
22:27:47.061 exportService.js:183 Word文档导出成功!
